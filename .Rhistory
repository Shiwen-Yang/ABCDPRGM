aw_bias <- read.csv("/Users/shiwen/Documents/GitHub/ABCDPRGM/real_data/aw_bias.csv")[,-1] %>% as_tibble()
# evolution of the model example ------------------------------------------
evo <- read.csv("/Users/shiwen/Documents/GitHub/ABCDPRGM/simulated_data/time_vs_lat_pos/neg_4_sample.csv") %>% as_tibble() %>% select(-X)
library(tidyverse)
library(cowplot)
library(latex2exp)
library(ggh4x)
# evolution of the model example ------------------------------------------
evo <- read.csv("/Users/shiwen/Documents/GitHub/ABCDPRGM/simulated_data/time_vs_lat_pos/neg_4_sample.csv") %>% as_tibble() %>% select(-X)
# Comparing Alignment: Oracle vs. RGD -------------------------------------
Oracle_performance = read.csv("/Users/shiwen/Documents/GitHub/ABCDPRGM/simulated_data/est_lat_pos/example_1/convergence/oracle_performance.csv")
RGD_performance = read.csv("/Users/shiwen/Documents/GitHub/ABCDPRGM/simulated_data/est_lat_pos/example_1/convergence/RGD_performance.csv")
n = nrow(Oracle_performance)
df_performance = rbind(Oracle_performance, RGD_performance)
df_performance <- df_performance %>%
mutate("method" = c(rep("Ora_Align", n), rep("RGD_Align", n))) %>%
as_tibble() %>%
pivot_longer(cols = contains("error_"),
names_to = "Time",
names_prefix = "error_",
values_to = "Error") %>%
mutate(Time = if_else(
Time == "T0", "T = 0", "T = 1"
))
path_ASE_aligned <- "/Users/shiwen/Documents/GitHub/ABCDPRGM/simulated_data/est_lat_pos/example_1/estimate_lat_pos/ASE_aligned_lat_pos.csv"
path_ASE <- "/Users/shiwen/Documents/GitHub/ABCDPRGM/simulated_data/est_lat_pos/example_1/estimate_lat_pos/ASE_lat_pos.csv"
path_RGD_aligned <- "/Users/shiwen/Documents/GitHub/ABCDPRGM/simulated_data/est_lat_pos/example_1/estimate_lat_pos/RGD_aligned_lat_pos.csv"
path_truth <- "/Users/shiwen/Documents/GitHub/ABCDPRGM/simulated_data/est_lat_pos/example_1/estimate_lat_pos/tru_lat_pos.csv"
ASE_aligned <- read.csv(path_ASE_aligned) %>% mutate(method = "ASE_aligned")
ASE <- read.csv(path_ASE) %>% mutate(method = "ASE")
RGD_aligned <- read.csv(path_RGD_aligned) %>% mutate(method = "RGD_aligned")
truth <- read.csv(path_truth) %>% mutate(method = "Truth")
all_lat_pos <- rbind(truth, ASE, ASE_aligned, RGD_aligned)[,-1] %>%
as_tibble() %>%
mutate(group = as.factor(group),
time = as.factor(time))
path_consistency_linreg = "/Users/shiwen/Documents/GitHub/ABCDPRGM/simulated_data/theo_var_vs_emp_var/justify_oracle_guess/lin_reg_init_est.csv"
path_consistency_oracle = "/Users/shiwen/Documents/GitHub/ABCDPRGM/simulated_data/theo_var_vs_emp_var/justify_oracle_guess/oracle_init_est.csv"
consistency_linreg <- read.csv(path_consistency_linreg) %>% mutate(init = "linreg")
consistency_oracle <- read.csv(path_consistency_oracle) %>% mutate(init = "oracle")
constraint <- c(1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1., -0., -0.,  0.,  0.,  0.,
0.,  0.,  1.,  0.,  0.,  0., -1., -0., -0.,  0.,  0.,  1.,  0.,  0.,
0.,  0.,  0.,  0., -0., -1., -0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,
0.,  0., -0., -1., -0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,
-0., -0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0., -0., -0.,
-1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  1.,  1.,  1.,  1.,  1.) %>% matrix(4, 21)
H <- solve(tcrossprod(constraint), constraint)
consistency_both <- bind_rows(consistency_linreg, consistency_oracle) %>%
pivot_longer(cols = starts_with("method_"),
names_to = "method",
names_prefix = "method_",
values_to = "value") %>%
filter(value == 1) %>%
select(-value) %>%
filter(number_of_iterations != max_iterations)
comparison_summary <- consistency_both %>%
group_by(nodes, seed, init, method) %>%
reframe(C_B_est = c(H %*% B_est),
C_B_real = c(H %*% B_real),
component =  paste0("beta", 1:4),
info_lost = mean(info_lost),
time_elapsed = mean(time_elapsed),
max_iterations = mean(max_iterations)) %>%
group_by(nodes, init, method, component) %>%
mutate(error = (C_B_est - C_B_real)) %>%
summarize(mean_C_B_est = mean(C_B_est),
sd_C_B_est = sd(C_B_est),
mean_C_B_real = mean(C_B_real),
bias = mean(error),
sd_error = sd(error),
mean_info_lost = mean(info_lost),
mean_time_elapsed = mean(time_elapsed),
sd_time_elapsed = sd(time_elapsed))
path_B_est <- "/Users/shiwen/Desktop/ABC data sets/consistency/est_all.csv"
B_est <- read.csv(path_B_est) %>% na.omit() %>% as_tibble() %>% filter(number_of_iterations != max_iterations)
constraint <- c(1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1., -0., -0.,  0.,  0.,  0.,
0.,  0.,  1.,  0.,  0.,  0., -1., -0., -0.,  0.,  0.,  1.,  0.,  0.,
0.,  0.,  0.,  0., -0., -1., -0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,
0.,  0., -0., -1., -0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,
-0., -0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0., -0., -0.,
-1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  1.,  1.,  1.,  1.,  1.) %>% matrix(4, 21)
B_est_bias <- B_est %>%
select(-X) %>%
pivot_longer(cols = starts_with("method_"),
values_to = "value",
names_to = "method",
names_prefix = "method_") %>%
filter(value == 1) %>%
group_by(seed, nodes, method) %>%
reframe(C_B_est = c(solve(tcrossprod(constraint), constraint %*% B_est)),
C_B_real = c(solve(tcrossprod(constraint), constraint %*% B_real)),
component = paste0("beta", 1:4),
time_elapsed = mean(time_elapsed)) %>%
mutate(Error = (C_B_est - C_B_real)) %>%
group_by(nodes, method, component) %>%
summarize(Bias = mean(Error),
Mean_ABS_Error = mean(abs(Error)),
SE = sd(Error),
Mean_Time_Elapsed = mean(time_elapsed),
SD_Time_Elapsed = sd(time_elapsed))
path_fish_est <- "/Users/shiwen/Desktop/ABC data sets/consistency/fish_all.csv"
fish_est <- read.csv(path_fish_est) %>% na.omit() %>% as_tibble()
fish_est_long <- fish_est %>%
rename(id = "X") %>%
pivot_longer(cols = starts_with("method_"),
values_to = "value",
names_to = "method",
names_prefix = "method_") %>%
filter(value == 1) %>%
select(-value) %>%
mutate(method = case_when(
method == 1 ~ "OL",
method == 2 ~ "OA",
method == 3 ~ "NO"
)) %>%
pivot_longer(cols = starts_with("fisher_info_"),
values_to = "fisher_info",
names_to = "component",
names_prefix = "fisher_info_")
fish_summary <- fish_est_long %>%
group_by(nodes, method, id) %>%
reframe(diag_inv_H_fish_tH = c(diag(H %*% solve(matrix(fisher_info, 21, 21) )%*% t(H))),
component = paste0("beta",1:4)) %>%
mutate(st_dev = sqrt(diag_inv_H_fish_tH)) %>%
group_by(nodes, method, component) %>%
summarize(st_dev = mean(st_dev))
B_SE_STD <- full_join(fish_summary, B_est_bias, by = join_by(nodes == nodes, method == method, component == component))
aw_bias <- read.csv("/Users/shiwen/Documents/GitHub/ABCDPRGM/real_data/aw_bias.csv")[,-1] %>% as_tibble()
# Plot theme --------------------------------------------------------------
theme_big <- function() {
theme(
text = element_text(size = 12, color = "black"),          # Default text size, slightly smaller for paper
axis.title.x = element_text(size = 14, face = "bold", margin = margin(t = 10, b = 10, unit = "pt")),  # Compact margins for paper
axis.title.y = element_text(size = 14, face = "bold", margin = margin(l = 10, r = 10, unit = "pt")),  # Compact y-axis labels
axis.text = element_text(size = 12),                      # Tick labels small and readable
legend.title = element_text(size = 12, face = "bold"),    # Legend title size appropriate for paper
legend.text = element_text(size = 12),                    # Smaller legend text
plot.title = element_text(size = 14, face = "bold", hjust = 0.5, margin = margin(t = 20, b = 20, unit = "pt")),  # Title slightly larger but not too much
plot.margin = margin(t = 20, r = 20, b = 20, l = 20, unit = "pt")  # Minimal margins to save space
)
}
evo %>% filter(time %in% c(6, 8, 10, 12)) %>%
mutate(Group = as.factor(group)) %>%
ggplot(aes(x = dim_1, y = dim_2, color = Group)) +
geom_point(size = 2, alpha = 0.3) +
geom_density_2d(linewidth = 1, alpha = 0.8)  +
facet_wrap(~time, labeller = labeller(time = c('6' = 'T = 6', '8' = 'T = 8', '10' = 'T = 10', '12' = 'T = 12')))+
theme_minimal() +
labs(x = "Dimension 1", y = "Dimension 2") +
theme_big()
evo %>% filter(time %in% c(6, 8, 10, 12)) %>%
mutate(Group = as.factor(group)) %>%
ggplot(aes(x = dim_1, y = dim_2, color = Group)) +
geom_point(size = 2, alpha = 0.3) +
geom_density_2d(linewidth = 1, alpha = 0.8)  +
facet_wrap(~time, labeller = labeller(time = c('6' = 'T = 6', '8' = 'T = 8', '10' = 'T = 10', '12' = 'T = 12')))+
labs(x = "Dimension 1", y = "Dimension 2") +
theme_big()
evo %>% filter(time %in% c(6, 8, 10, 12)) %>%
mutate(Group = as.factor(group)) %>%
ggplot(aes(x = dim_1, y = dim_2, color = Group)) +
geom_point(size = 2, alpha = 0.3) +
geom_density_2d(linewidth = 0.5, alpha = 0.8)  +
facet_wrap(~time, labeller = labeller(time = c('6' = 'T = 6', '8' = 'T = 8', '10' = 'T = 10', '12' = 'T = 12')))+
labs(x = "Dimension 1", y = "Dimension 2") +
theme_big()
evo %>% filter(time %in% c(6, 8, 10, 12)) %>%
mutate(Group = as.factor(group)) %>%
ggplot(aes(x = dim_1, y = dim_2, color = Group)) +
geom_point(size = 2, alpha = 0.3) +
geom_density_2d(linewidth = 0.5, alpha = 0.8)  +
facet_wrap(~time, labeller = labeller(time = c('6' = 'T = 6', '8' = 'T = 8', '10' = 'T = 10', '12' = 'T = 12')))+
labs(x = "Dimension 1", y = "Dimension 2", title = "Polarization Through Time") +
theme_big()
# Plot 9: est vs. dim with error bars (Real Data) ---------------------------------------------
aw_bias %>% pivot_longer(
cols = starts_with("b"),
names_to = "est_comp",
names_prefix = "b",
values_to = "est"
) %>%
pivot_longer(
cols = starts_with("s"),
names_to = "SD_comp",
names_prefix = "s",
values_to = "SD"
) %>%
filter(est_comp == SD_comp) %>%
select(-SD_comp) %>%
mutate(est_comp = as.numeric(est_comp) + 1) %>%
ggplot(aes(x = dim, y = est)) +
geom_point() +  # Scatter plot
geom_errorbar(aes(ymin = est - 2 * SD, ymax = est + 2 * SD), width = 0.1) +  # Error bars with 2*SD
facet_wrap(~ est_comp, scales = "free") +  # Facet wrap by `est_comp`
labs(x = "Dimension", y = "Estimate", title = "Estimate vs. Dimension with Error Bars (2*SD)")
# Plot 9: est vs. dim with error bars (Real Data) ---------------------------------------------
aw_bias %>% pivot_longer(
cols = starts_with("b"),
names_to = "est_comp",
names_prefix = "b",
values_to = "est"
) %>%
pivot_longer(
cols = starts_with("s"),
names_to = "SD_comp",
names_prefix = "s",
values_to = "SD"
) %>%
filter(est_comp == SD_comp) %>%
select(-SD_comp) %>%
mutate(est_comp = as.numeric(est_comp) + 1) %>%
ggplot(aes(x = dim, y = est)) +
geom_point() +  # Scatter plot
geom_errorbar(aes(ymin = est - 2 * SD, ymax = est + 2 * SD), width = 0.1) +  # Error bars with 2*SD
facet_wrap(~ est_comp, scales = "free") +  # Facet wrap by `est_comp`
labs(x = "Dimension", y = "Estimate", title = "Estimate vs. Dimension with Error Bars (2*SD)") +
theme_big()
# Plot 9: est vs. dim with error bars (Real Data) ---------------------------------------------
aw_bias %>% pivot_longer(
cols = starts_with("b"),
names_to = "est_comp",
names_prefix = "b",
values_to = "est"
) %>%
pivot_longer(
cols = starts_with("s"),
names_to = "SD_comp",
names_prefix = "s",
values_to = "SD"
) %>%
filter(est_comp == SD_comp) %>%
select(-SD_comp) %>%
mutate(est_comp = as.numeric(est_comp) + 1) %>%
ggplot(aes(x = dim, y = est)) +
geom_point() +  # Scatter plot
geom_errorbar(aes(ymin = est - 2 * SD, ymax = est + 2 * SD), width = 0.1) +  # Error bars with 2*SD
facet_wrap(~ est_comp, scales = "free") +  # Facet wrap by `est_comp`
labs(x = "Dimension", y = "Estimate", title = "Est vs. Dim U+00B1 (2*SD)") +
theme_big()
# Plot 9: est vs. dim with error bars (Real Data) ---------------------------------------------
aw_bias %>% pivot_longer(
cols = starts_with("b"),
names_to = "est_comp",
names_prefix = "b",
values_to = "est"
) %>%
pivot_longer(
cols = starts_with("s"),
names_to = "SD_comp",
names_prefix = "s",
values_to = "SD"
) %>%
filter(est_comp == SD_comp) %>%
select(-SD_comp) %>%
mutate(est_comp = as.numeric(est_comp) + 1) %>%
ggplot(aes(x = dim, y = est)) +
geom_point() +  # Scatter plot
geom_errorbar(aes(ymin = est - 2 * SD, ymax = est + 2 * SD), width = 0.1) +  # Error bars with 2*SD
facet_wrap(~ est_comp, scales = "free") +  # Facet wrap by `est_comp`
labs(x = "Dimension", y = "Estimate", title = "Est vs. Dim U+00B1[0] (2*SD)") +
theme_big()
# Plot 9: est vs. dim with error bars (Real Data) ---------------------------------------------
aw_bias %>% pivot_longer(
cols = starts_with("b"),
names_to = "est_comp",
names_prefix = "b",
values_to = "est"
) %>%
pivot_longer(
cols = starts_with("s"),
names_to = "SD_comp",
names_prefix = "s",
values_to = "SD"
) %>%
filter(est_comp == SD_comp) %>%
select(-SD_comp) %>%
mutate(est_comp = as.numeric(est_comp) + 1) %>%
ggplot(aes(x = dim, y = est)) +
geom_point() +  # Scatter plot
geom_errorbar(aes(ymin = est - 2 * SD, ymax = est + 2 * SD), width = 0.1) +  # Error bars with 2*SD
facet_wrap(~ est_comp, scales = "free") +  # Facet wrap by `est_comp`
labs(x = "Dimension", y = "Estimate", title = "Away: Dim vs. Est with Error Bar (2*SD)") +
theme_big()
